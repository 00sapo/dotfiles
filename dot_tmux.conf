# set-option -g default-shell /bin/fish
set-option -sg escape-time 10                          
set -ag terminal-overrides ",xterm-256color:RGB"
set-option -g mouse on
set-option -g base-index 1                # window index will start with 1
set-window-option -g pane-base-index 1    # pane index will start with 1
set-option -g renumber-windows on
bind-key -r < swap-window -t - \; previous-window
bind-key -r > swap-window -t + \; next-window
set-option -g set-clipboard on

# notify on silence
set-option -g silence-action any # if monitor-silence is on, monitor silence in any window (current and other)
set-option -g activity-action any # same for activity
set-hook -g alert-silence "run-shell 'echo \"No activity in window #{window_index} (#{window_name})\" > /dev/pts/0'; "
set-hook -g alert-activity "run-shell 'echo \"Activity started in window #{window_index} (#{window_name})\" > /dev/pts/0'; "

# common operations
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind e last-window
bind d select-window -l \; send-keys Enter Enter Enter Enter '!!' Enter
bind R source-file ~/.tmux.conf; display-message "Reloaded config"
bind J command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind w choose-session
bind K kill-session
bind N new-session
# bind m 'setw monitor-silence 10; display-message "Silence monitor ON"'
# bind M 'setw monitor-silence 0; display-message "Silence monitor OFF"'
bind S run-shell 'if [ $(tmux show-window-option -v monitor-silence) -eq 10 ]; then silence=0; else silence=10; fi; tmux display-message "monitor silence tmux: $silence"; tmux set-window-option monitor-silence $silence &> /dev/null'
bind A run-shell 'if [ $(tmux show-window-option -v monitor-activity) = "on" ]; then activity=off; else activity=on; fi; tmux display-message "monitor activity tmux: $activity"; tmux set-window-option monitor-activity $activity &> /dev/null'



# tmux nova (status bar)
set-option -g status-position top
set -g @nova-nerdfonts true
set -g @nova-nerdfonts-left 
set -g @nova-nerdfonts-right 
set -g @nova-segment-mode "#{?client_prefix,Ω,ω}"
set -g @nova-segment-mode-colors "#50fa7b #282a36"
set -g @nova-segment-whoami "#(whoami)@#h"
set -g @nova-segment-whoami-colors "#50fa7b #282a36"
set -g @nova-pane "#I#{?pane_in_mode,  #{pane_mode},}  #W"
set -g @nova-rows 0
set -g @nova-segments-0-left "mode"
set -g @nova-segments-0-right "whoami"


# #####################################################################################
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'aserowy/tmux.nvim'
set -g @plugin 'o0th/tmux-nova'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
